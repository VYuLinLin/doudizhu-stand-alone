{"version":3,"sources":["..\\..\\..\\..\\..\\..\\assets\\scripts\\gameScene\\prefabs/assets\\scripts\\gameScene\\prefabs\\card.js"],"names":["ddzData","require","ddzConstants","cc","Class","Component","properties","cards_sprite_atlas","SpriteAtlas","onLoad","flag","offset_y","node","on","event","y","bind","runToCenter","start","init_data","data","setTouchEvent","userId","myglobal","playerData","Node","EventType","TOUCH_START","gameState","PLAYING","console","log","caardIndex","$socket","emit","card_data","showCards","card","index","cardValue","cardShape","kings","spriteKey","shape","value","king","getComponent","Sprite","spriteFrame","getSpriteFrame"],"mappings":"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","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\scripts\\gameScene\\prefabs","sourcesContent":["import myglobal from \"../../mygolbal.js\"\r\nconst ddzData = require('ddzData')\r\nconst ddzConstants = require('ddzConstants')\r\n\r\ncc.Class({\r\n  extends: cc.Component,\r\n\r\n  properties: {\r\n    cards_sprite_atlas: cc.SpriteAtlas,\r\n\r\n  },\r\n\r\n  onLoad() {\r\n    this.flag = false\r\n    this.offset_y = 20\r\n\r\n    this.node.on(\"reset_card_flag\", function (event) {\r\n      if (this.flag) {\r\n        this.flag = false\r\n        this.node.y -= this.offset_y\r\n      }\r\n    }.bind(this))\r\n\r\n    // this.node.on(\"chu_card_succ\",function(event){\r\n    //    var chu_card_list = event\r\n    //    for(var i=0;i<chu_card_list.length;i++){\r\n    //     if(chu_card_list[i].caardIndex==this.caardIndex){\r\n    //         //this.runToCenter(chu_card_list[i])\r\n    //         //this.node.destory()\r\n    //     }\r\n    //    }\r\n    // }.bind(this))\r\n  },\r\n\r\n  runToCenter() {\r\n    //移动到屏幕中间，并带一个牌缩小的效果\r\n  },\r\n  start() {\r\n\r\n  },\r\n\r\n  init_data(data) {\r\n\r\n  },\r\n  setTouchEvent() {\r\n    if (this.userId == myglobal.playerData.userId) {\r\n      this.node.on(cc.Node.EventType.TOUCH_START, function (event) {\r\n        // var gameScene_node = this.node.parent\r\n        // var room_state = gameScene_node.getComponent(\"gameScene\").roomstate\r\n        if (ddzData.gameState === ddzConstants.gameState.PLAYING) {\r\n          console.log(\"TOUCH_START id:\" + this.caardIndex)\r\n          if (!this.flag) {\r\n            this.flag = true\r\n            this.node.y += this.offset_y\r\n            //通知gameui层选定的牌\r\n            // var carddata = {\r\n            //   \"index\": this.caardIndex,\r\n            //   \"card_data\": this.card_data,\r\n            // }\r\n            // gameScene_node.emit(\"choose_card_event\", this.card_data)\r\n            $socket.emit('_chooseCard', this.card_data)\r\n          } else {\r\n            this.flag = false\r\n            this.node.y -= this.offset_y\r\n            //通知gameUI取消了那张牌\r\n            $socket.emit('_unchooseCard', this.caardIndex)\r\n            // gameScene_node.emit(\"unchoose_card_event\", this.caardIndex)\r\n          }\r\n        }\r\n      }.bind(this))\r\n    }\r\n  },\r\n  showCards(card, userId) {\r\n    //card.index是服务器生成card给对象设置的一副牌里唯一id\r\n    this.caardIndex = card.index\r\n    //传入参数 card={\"value\":5,\"shape\":1,\"index\":20}\r\n    this.card_data = card\r\n    if (userId) {\r\n      this.userId = userId //标识card属于的玩家\r\n    }\r\n    //服务器返回的是key(A-K),value对应的是资源的编号\r\n    const cardValue = {\r\n      \"12\": 1,\r\n      \"13\": 2,\r\n      \"1\": 3,\r\n      \"2\": 4,\r\n      \"3\": 5,\r\n      \"4\": 6,\r\n      \"5\": 7,\r\n      \"6\": 8,\r\n      \"7\": 9,\r\n      \"8\": 10,\r\n      \"9\": 11,\r\n      \"10\": 12,\r\n      \"11\": 13\r\n    };\r\n\r\n    // 黑桃： spade\r\n    // 红桃： heart\r\n    // 梅花： club\r\n    // 方片： diamond\r\n    // const CardShape = {\r\n    //     \"S\": 1,\r\n    //     \"H\": 2,\r\n    //     \"C\": 3,\r\n    //     \"D\": 4,\r\n    // };\r\n    const cardShape = {\r\n      \"1\": 3,\r\n      \"2\": 2,\r\n      \"3\": 1,\r\n      \"4\": 0\r\n    };\r\n    const kings = {\r\n      \"14\": 54,\r\n      \"15\": 53\r\n    };\r\n\r\n    var spriteKey = '';\r\n    if (card.shape) {\r\n      spriteKey = 'card_' + (cardShape[card.shape] * 13 + cardValue[card.value]);\r\n    } else {\r\n      spriteKey = 'card_' + kings[card.king];\r\n    }\r\n\r\n    this.node.getComponent(cc.Sprite).spriteFrame = this.cards_sprite_atlas.getSpriteFrame(spriteKey)\r\n    this.setTouchEvent()\r\n  }\r\n});\r\n"]}