{"version":3,"sources":["..\\..\\..\\..\\..\\..\\assets\\scripts\\gameScene\\prefabs/assets\\scripts\\gameScene\\prefabs\\card.js"],"names":["cc","Class","Component","properties","cards_sprite_atlas","SpriteAtlas","onLoad","flag","offset_y","node","on","event","y","bind","runToCenter","start","init_data","data","setTouchEvent","accountid","myglobal","playerData","accountID","Node","EventType","TOUCH_START","gameScene_node","parent","room_state","getComponent","roomstate","RoomState","ROOM_PLAYING","console","log","card_id","carddata","card_data","emit","showCards","card","index","CardValue","cardShpae","Kings","spriteKey","shape","value","king","Sprite","spriteFrame","getSpriteFrame"],"mappings":"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","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\scripts\\gameScene\\prefabs","sourcesContent":["import myglobal from \"../../mygolbal.js\"\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n     cards_sprite_atlas: cc.SpriteAtlas,\r\n     \r\n    },\r\n\r\n    onLoad () {\r\n        this.flag = false\r\n        this.offset_y = 20\r\n        \r\n        this.node.on(\"reset_card_flag\",function(event){\r\n            if(this,flag==true){\r\n                this,flag = false\r\n                this.node.y -= this.offset_y\r\n            }\r\n        }.bind(this))\r\n\r\n        // this.node.on(\"chu_card_succ\",function(event){\r\n        //    var chu_card_list = event\r\n        //    for(var i=0;i<chu_card_list.length;i++){\r\n        //     if(chu_card_list[i].card_id==this.card_id){\r\n        //         //this.runToCenter(chu_card_list[i])\r\n        //         //this.node.destory()\r\n        //     }\r\n        //    }\r\n        // }.bind(this))\r\n    },\r\n\r\n    runToCenter(){\r\n        //移动到屏幕中间，并带一个牌缩小的效果\r\n    },\r\n    start () {\r\n\r\n    },\r\n\r\n    init_data(data){\r\n\r\n    },\r\n    // update (dt) {},\r\n    setTouchEvent(){\r\n        if(this.accountid==myglobal.playerData.accountID){\r\n            this.node.on(cc.Node.EventType.TOUCH_START,function(event){\r\n                var gameScene_node = this.node.parent  \r\n                var room_state = gameScene_node.getComponent(\"gameScene\").roomstate\r\n                if(room_state==RoomState.ROOM_PLAYING){\r\n                    console.log(\"TOUCH_START id:\"+this.card_id)\r\n                    if(this.flag==false){\r\n                        this.flag = true\r\n                        this.node.y += this.offset_y\r\n                        //通知gameui层选定的牌\r\n                        var carddata = {\r\n                            \"cardid\":this.card_id,\r\n                            \"card_data\":this.card_data,\r\n                        }\r\n                        gameScene_node.emit(\"choose_card_event\",carddata)\r\n                    }else{\r\n                        this.flag=false\r\n                        this.node.y -= this.offset_y\r\n                        //通知gameUI取消了那张牌\r\n                       gameScene_node.emit(\"unchoose_card_event\",this.card_id)\r\n                    }\r\n                }\r\n              \r\n            }.bind(this))\r\n        }\r\n       \r\n    },\r\n    showCards(card,accountid){\r\n        //card.index是服务器生成card给对象设置的一副牌里唯一id\r\n        this.card_id = card.index\r\n        //传入参数 card={\"value\":5,\"shape\":1,\"index\":20}\r\n        this.card_data = card\r\n        if(accountid){\r\n            this.accountid = accountid //标识card属于的玩家\r\n        }\r\n       \r\n        //this.node.getComponent(cc.Sprite).spriteFrame = \r\n        //服务器定义牌的表示\r\n        // const cardvalue = {\r\n        //     \"A\": 12,\r\n        //     \"2\": 13,\r\n        //     \"3\": 1,\r\n        //     \"4\": 2,\r\n        //     \"5\": 3,\r\n        //     \"6\": 4,\r\n        //     \"7\": 5,\r\n        //     \"8\": 6,\r\n        //     \"9\": 7,\r\n        //     \"10\": 8,\r\n        //     \"J\": 9,\r\n        //     \"Q\": 10,\r\n        //     \"K\": 11,\r\n        // }\r\n        \r\n       \r\n        //服务器返回的是key,value对应的是资源的编号\r\n        const CardValue = {\r\n            \"12\": 1,\r\n            \"13\": 2,\r\n            \"1\": 3,\r\n            \"2\": 4,\r\n            \"3\": 5,\r\n            \"4\": 6,\r\n            \"5\": 7,\r\n            \"6\": 8,\r\n            \"7\": 9,\r\n            \"8\": 10,\r\n            \"9\": 11,\r\n            \"10\": 12,\r\n            \"11\": 13\r\n        };\r\n\r\n        // 黑桃：spade\r\n        // 红桃：heart\r\n        // 梅花：club\r\n        // 方片：diamond\r\n        // const CardShape = {\r\n        //     \"S\": 1,\r\n        //     \"H\": 2,\r\n        //     \"C\": 3,\r\n        //     \"D\": 4,\r\n        // };\r\n        const cardShpae = {\r\n            \"1\": 3,\r\n            \"2\": 2,\r\n            \"3\": 1,\r\n            \"4\": 0\r\n        };\r\n        const Kings = {\r\n            \"14\": 54,\r\n            \"15\": 53\r\n        };\r\n\r\n        var spriteKey = '';\r\n        if (card.shape){\r\n            spriteKey = 'card_' + (cardShpae[card.shape] * 13 + CardValue[card.value]);\r\n\r\n        }else {\r\n            spriteKey = 'card_' + Kings[card.king];\r\n        }\r\n\r\n       // console.log(\"spriteKey\"+spriteKey)\r\n        this.node.getComponent(cc.Sprite).spriteFrame = this.cards_sprite_atlas.getSpriteFrame(spriteKey)\r\n        this.setTouchEvent()\r\n    }\r\n});\r\n\r\n\r\n"]}