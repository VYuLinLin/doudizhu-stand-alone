{"version":3,"sources":["..\\..\\..\\..\\..\\..\\assets\\scripts\\gameScene\\prefabs/assets\\scripts\\gameScene\\prefabs\\card.js"],"names":["cc","Class","Component","properties","cards_sprite_atlas","SpriteAtlas","onLoad","flag","offset_y","node","on","event","y","bind","runToCenter","start","init_data","data","setTouchEvent","accountid","myglobal","playerData","accountID","Node","EventType","TOUCH_START","gameScene_node","parent","room_state","getComponent","roomstate","defines","gameState","ROOM_PLAYING","console","log","card_id","carddata","card_data","emit","showCards","card","index","CardValue","cardShpae","Kings","spriteKey","shape","value","king","Sprite","spriteFrame","getSpriteFrame"],"mappings":";;;;;;AAAA;;;;AAEAA,EAAE,CAACC,KAAH,CAAS;AACP,aAASD,EAAE,CAACE,SADL;AAGPC,EAAAA,UAAU,EAAE;AACVC,IAAAA,kBAAkB,EAAEJ,EAAE,CAACK;AADb,GAHL;AAQPC,EAAAA,MARO,oBAQE;AACP,SAAKC,IAAL,GAAY,KAAZ;AACA,SAAKC,QAAL,GAAgB,EAAhB;AAEA,SAAKC,IAAL,CAAUC,EAAV,CAAa,iBAAb,EAAgC,UAAUC,KAAV,EAAiB;AAC/C,UAAI,MAAMJ,IAAI,IAAI,IAAlB,EAAwB;AACtB,cAAMA,IAAI,GAAG,KAAb;AACA,aAAKE,IAAL,CAAUG,CAAV,IAAe,KAAKJ,QAApB;AACD;AACF,KAL+B,CAK9BK,IAL8B,CAKzB,IALyB,CAAhC,EAJO,CAWP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GA5BM;AA8BPC,EAAAA,WA9BO,yBA8BO,CACZ;AACD,GAhCM;AAiCPC,EAAAA,KAjCO,mBAiCC,CAEP,CAnCM;AAqCPC,EAAAA,SArCO,qBAqCGC,IArCH,EAqCS,CAEf,CAvCM;AAwCP;AACAC,EAAAA,aAzCO,2BAyCS;AACd,QAAI,KAAKC,SAAL,IAAkBC,qBAASC,UAAT,CAAoBC,SAA1C,EAAqD;AACnD,WAAKb,IAAL,CAAUC,EAAV,CAAaV,EAAE,CAACuB,IAAH,CAAQC,SAAR,CAAkBC,WAA/B,EAA4C,UAAUd,KAAV,EAAiB;AAC3D,YAAIe,cAAc,GAAG,KAAKjB,IAAL,CAAUkB,MAA/B;AACA,YAAIC,UAAU,GAAGF,cAAc,CAACG,YAAf,CAA4B,WAA5B,EAAyCC,SAA1D;;AACA,YAAIF,UAAU,IAAIG,OAAO,CAACC,SAAR,CAAkBC,YAApC,EAAkD;AAChDC,UAAAA,OAAO,CAACC,GAAR,CAAY,oBAAoB,KAAKC,OAArC;;AACA,cAAI,KAAK7B,IAAL,IAAa,KAAjB,EAAwB;AACtB,iBAAKA,IAAL,GAAY,IAAZ;AACA,iBAAKE,IAAL,CAAUG,CAAV,IAAe,KAAKJ,QAApB,CAFsB,CAGtB;;AACA,gBAAI6B,QAAQ,GAAG;AACb,wBAAU,KAAKD,OADF;AAEb,2BAAa,KAAKE;AAFL,aAAf;AAIAZ,YAAAA,cAAc,CAACa,IAAf,CAAoB,mBAApB,EAAyCF,QAAzC;AACD,WATD,MASO;AACL,iBAAK9B,IAAL,GAAY,KAAZ;AACA,iBAAKE,IAAL,CAAUG,CAAV,IAAe,KAAKJ,QAApB,CAFK,CAGL;;AACAkB,YAAAA,cAAc,CAACa,IAAf,CAAoB,qBAApB,EAA2C,KAAKH,OAAhD;AACD;AACF;AAEF,OAtB2C,CAsB1CvB,IAtB0C,CAsBrC,IAtBqC,CAA5C;AAuBD;AAEF,GApEM;AAqEP2B,EAAAA,SArEO,qBAqEGC,IArEH,EAqEStB,SArET,EAqEoB;AACzB;AACA,SAAKiB,OAAL,GAAeK,IAAI,CAACC,KAApB,CAFyB,CAGzB;;AACA,SAAKJ,SAAL,GAAiBG,IAAjB;;AACA,QAAItB,SAAJ,EAAe;AACb,WAAKA,SAAL,GAAiBA,SAAjB,CADa,CACc;AAC5B,KAPwB,CASzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;;AACA,QAAMwB,SAAS,GAAG;AAChB,YAAM,CADU;AAEhB,YAAM,CAFU;AAGhB,WAAK,CAHW;AAIhB,WAAK,CAJW;AAKhB,WAAK,CALW;AAMhB,WAAK,CANW;AAOhB,WAAK,CAPW;AAQhB,WAAK,CARW;AAShB,WAAK,CATW;AAUhB,WAAK,EAVW;AAWhB,WAAK,EAXW;AAYhB,YAAM,EAZU;AAahB,YAAM;AAbU,KAAlB,CA7ByB,CA6CzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,QAAMC,SAAS,GAAG;AAChB,WAAK,CADW;AAEhB,WAAK,CAFW;AAGhB,WAAK,CAHW;AAIhB,WAAK;AAJW,KAAlB;AAMA,QAAMC,KAAK,GAAG;AACZ,YAAM,EADM;AAEZ,YAAM;AAFM,KAAd;AAKA,QAAIC,SAAS,GAAG,EAAhB;;AACA,QAAIL,IAAI,CAACM,KAAT,EAAgB;AACdD,MAAAA,SAAS,GAAG,WAAWF,SAAS,CAACH,IAAI,CAACM,KAAN,CAAT,GAAwB,EAAxB,GAA6BJ,SAAS,CAACF,IAAI,CAACO,KAAN,CAAjD,CAAZ;AAED,KAHD,MAGO;AACLF,MAAAA,SAAS,GAAG,UAAUD,KAAK,CAACJ,IAAI,CAACQ,IAAN,CAA3B;AACD,KAxEwB,CA0EzB;;;AACA,SAAKxC,IAAL,CAAUoB,YAAV,CAAuB7B,EAAE,CAACkD,MAA1B,EAAkCC,WAAlC,GAAgD,KAAK/C,kBAAL,CAAwBgD,cAAxB,CAAuCN,SAAvC,CAAhD;AACA,SAAK5B,aAAL;AACD;AAlJM,CAAT","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\scripts\\gameScene\\prefabs","sourcesContent":["import myglobal from \"../../mygolbal.js\"\r\n\r\ncc.Class({\r\n  extends: cc.Component,\r\n\r\n  properties: {\r\n    cards_sprite_atlas: cc.SpriteAtlas,\r\n\r\n  },\r\n\r\n  onLoad() {\r\n    this.flag = false\r\n    this.offset_y = 20\r\n\r\n    this.node.on(\"reset_card_flag\", function (event) {\r\n      if (this, flag == true) {\r\n        this, flag = false\r\n        this.node.y -= this.offset_y\r\n      }\r\n    }.bind(this))\r\n\r\n    // this.node.on(\"chu_card_succ\",function(event){\r\n    //    var chu_card_list = event\r\n    //    for(var i=0;i<chu_card_list.length;i++){\r\n    //     if(chu_card_list[i].card_id==this.card_id){\r\n    //         //this.runToCenter(chu_card_list[i])\r\n    //         //this.node.destory()\r\n    //     }\r\n    //    }\r\n    // }.bind(this))\r\n  },\r\n\r\n  runToCenter() {\r\n    //移动到屏幕中间，并带一个牌缩小的效果\r\n  },\r\n  start() {\r\n\r\n  },\r\n\r\n  init_data(data) {\r\n\r\n  },\r\n  // update (dt) {},\r\n  setTouchEvent() {\r\n    if (this.accountid == myglobal.playerData.accountID) {\r\n      this.node.on(cc.Node.EventType.TOUCH_START, function (event) {\r\n        var gameScene_node = this.node.parent\r\n        var room_state = gameScene_node.getComponent(\"gameScene\").roomstate\r\n        if (room_state == defines.gameState.ROOM_PLAYING) {\r\n          console.log(\"TOUCH_START id:\" + this.card_id)\r\n          if (this.flag == false) {\r\n            this.flag = true\r\n            this.node.y += this.offset_y\r\n            //通知gameui层选定的牌\r\n            var carddata = {\r\n              \"cardid\": this.card_id,\r\n              \"card_data\": this.card_data,\r\n            }\r\n            gameScene_node.emit(\"choose_card_event\", carddata)\r\n          } else {\r\n            this.flag = false\r\n            this.node.y -= this.offset_y\r\n            //通知gameUI取消了那张牌\r\n            gameScene_node.emit(\"unchoose_card_event\", this.card_id)\r\n          }\r\n        }\r\n\r\n      }.bind(this))\r\n    }\r\n\r\n  },\r\n  showCards(card, accountid) {\r\n    //card.index是服务器生成card给对象设置的一副牌里唯一id\r\n    this.card_id = card.index\r\n    //传入参数 card={\"value\":5,\"shape\":1,\"index\":20}\r\n    this.card_data = card\r\n    if (accountid) {\r\n      this.accountid = accountid //标识card属于的玩家\r\n    }\r\n\r\n    //this.node.getComponent(cc.Sprite).spriteFrame = \r\n    //服务器定义牌的表示\r\n    // const cardvalue = {\r\n    //     \"A\": 12,\r\n    //     \"2\": 13,\r\n    //     \"3\": 1,\r\n    //     \"4\": 2,\r\n    //     \"5\": 3,\r\n    //     \"6\": 4,\r\n    //     \"7\": 5,\r\n    //     \"8\": 6,\r\n    //     \"9\": 7,\r\n    //     \"10\": 8,\r\n    //     \"J\": 9,\r\n    //     \"Q\": 10,\r\n    //     \"K\": 11,\r\n    // }\r\n\r\n\r\n    //服务器返回的是key,value对应的是资源的编号\r\n    const CardValue = {\r\n      \"12\": 1,\r\n      \"13\": 2,\r\n      \"1\": 3,\r\n      \"2\": 4,\r\n      \"3\": 5,\r\n      \"4\": 6,\r\n      \"5\": 7,\r\n      \"6\": 8,\r\n      \"7\": 9,\r\n      \"8\": 10,\r\n      \"9\": 11,\r\n      \"10\": 12,\r\n      \"11\": 13\r\n    };\r\n\r\n    // 黑桃：spade\r\n    // 红桃：heart\r\n    // 梅花：club\r\n    // 方片：diamond\r\n    // const CardShape = {\r\n    //     \"S\": 1,\r\n    //     \"H\": 2,\r\n    //     \"C\": 3,\r\n    //     \"D\": 4,\r\n    // };\r\n    const cardShpae = {\r\n      \"1\": 3,\r\n      \"2\": 2,\r\n      \"3\": 1,\r\n      \"4\": 0\r\n    };\r\n    const Kings = {\r\n      \"14\": 54,\r\n      \"15\": 53\r\n    };\r\n\r\n    var spriteKey = '';\r\n    if (card.shape) {\r\n      spriteKey = 'card_' + (cardShpae[card.shape] * 13 + CardValue[card.value]);\r\n\r\n    } else {\r\n      spriteKey = 'card_' + Kings[card.king];\r\n    }\r\n\r\n    // console.log(\"spriteKey\"+spriteKey)\r\n    this.node.getComponent(cc.Sprite).spriteFrame = this.cards_sprite_atlas.getSpriteFrame(spriteKey)\r\n    this.setTouchEvent()\r\n  }\r\n});\r\n\r\n\r\n"]}