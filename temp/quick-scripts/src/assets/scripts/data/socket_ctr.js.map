{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\scripts\\data/assets\\scripts\\data\\socket_ctr.js"],"names":["window","$socket","socketCtr","that","respone_map","call_index","_socket","_sendmsg","cmdtype","req","callindex","emit","cmd","data","_request","callback","console","log","JSON","stringify","initSocket","opts","io","connect","defines","serverUrl","on","res","hasOwnProperty","callBackIndex","result","type","request_wxLogin","request_creatroom","request_jion","request_enter_room","request_buchu_card","request_chu_card","onPlayerJoinRoom","onPlayerReady","onGameStart","onChangeHouseManage","requestReady","requestStart","requestRobState","state","onPushCards","onCanRobState","onRobState","onChangeMaster","onShowBottomCard","onCanChuCard","onRoomChangeState","onOtherPlayerChuCard"],"mappings":"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","sourceRoot":"..\\..\\..\\..\\..\\assets\\scripts\\data","sourcesContent":["import eventlister from \"../util/event_lister.js\"\r\nwindow.$socket = eventlister({})\r\nconst socketCtr = function(){\r\n    var that = {}\r\n    var respone_map = {} \r\n    var call_index = 0\r\n\r\n    var _socket = null\r\n    // var $socket = eventlister({})\r\n    const _sendmsg = function(cmdtype,req,callindex){\r\n        _socket.emit(\"notify\",{cmd:cmdtype,data:req,callindex:callindex})\r\n    } \r\n \r\n    const _request = function(cmdtype,req,callback){\r\n        console.log(\"send cmd:\"+cmdtype+\"  \"+ JSON.stringify(req))\r\n        call_index++ \r\n        respone_map[call_index] = callback\r\n        _sendmsg(cmdtype,req,call_index)\r\n    } \r\n  \r\n        \r\n    that.initSocket = function(){\r\n        var opts = {\r\n            'reconnection':false,\r\n            'force new connection': true,\r\n            'transports':['websocket', 'polling']\r\n        }\r\n        _socket = window.io.connect(defines.serverUrl,opts);\r\n\r\n        _socket.on(\"connection\",function(){\r\n            console.log(\"connect server success!!\")\r\n          })\r\n\r\n       _socket.on(\"notify\",function(res){\r\n         console.log(\"on notify cmd:\" + JSON.stringify(res))\r\n         if(respone_map.hasOwnProperty(res.callBackIndex)){\r\n           var callback = respone_map[res.callBackIndex]\r\n           if(callback){\r\n               callback(res.result,res.data)\r\n           }\r\n          }else{\r\n           //if(res.callBackIndex!=0){\r\n           //console.log(\"not found call index\",res.callBackIndex)\r\n              \r\n               //提交一个监听的事件给监听器\r\n        //  on notify cmd:{\"type\":\"player_joinroom_notify\",\"result\":0,\"data\":\r\n        //  {\"accountid\":\"2586422\",\"userName\":\"tiny110\",\"avatarUrl\":\r\n        //  \"avatar_3\",\"goldcount\":1000,\"seatindex\":2},\"callBackIndex\":null}\r\n              //没有找到回到函数，就给事件监听器提交一个事件\r\n              var type = res.type\r\n              $socket.emit(type, res.data)\r\n          // }\r\n           \r\n         }\r\n\r\n        })\r\n\r\n    }\r\n\r\n    that.request_wxLogin = function(req,callback){\r\n        _request(\"wxlogin\",req,callback)\r\n    }\r\n    \r\n    that.request_creatroom = function(req,callback){\r\n        _request(\"createroom_req\",req,callback)\r\n    }\r\n\r\n    that.request_jion = function(req,callback){\r\n        _request(\"joinroom_req\",req,callback)\r\n    }\r\n\r\n    that.request_enter_room = function(req,callback){\r\n        _request(\"enterroom_req\",req,callback)\r\n    }\r\n\r\n    //发送不出牌信息\r\n    that.request_buchu_card =  function(req,callback){\r\n        _request(\"chu_bu_card_req\",req,callback)\r\n    }\r\n    /*玩家出牌\r\n      需要判断: \r\n         出的牌是否符合规则\r\n         和上个出牌玩家比较，是否满足条件\r\n\r\n    */\r\n    that.request_chu_card = function(req,callback){\r\n        _request(\"chu_card_req\",req,callback)\r\n    }\r\n    //监听其他玩家进入房间消息\r\n    that.onPlayerJoinRoom = function(callback){\r\n         $socket.on(\"player_joinroom_notify\",callback)\r\n    }\r\n\r\n    that.onPlayerReady = function(callback){\r\n        $socket.on(\"player_ready_notify\",callback)\r\n    }\r\n\r\n    that.onGameStart = function(callback){\r\n        if(callback){\r\n           $socket.on(\"gameStart_notify\",callback)\r\n        }\r\n    }\r\n\r\n    that.onChangeHouseManage = function(callback){\r\n        if(callback){\r\n            $socket.on(\"changehousemanage_notify\",callback)\r\n        }\r\n    }\r\n    //发送ready消息\r\n    that.requestReady = function(){\r\n        _sendmsg(\"player_ready_notify\",{},null)\r\n    }\r\n\r\n    that.requestStart = function(callback){\r\n        _request(\"player_start_notify\",{},callback)\r\n    }\r\n\r\n    //玩家通知服务器抢地主消息\r\n    that.requestRobState = function(state){\r\n        _sendmsg(\"player_rob_notify\",state,null)\r\n    }\r\n    //服务器下发牌通知\r\n    that.onPushCards = function(callback){\r\n        if(callback){\r\n            $socket.on(\"pushcard_notify\",callback)\r\n         }\r\n    }\r\n\r\n    //监听服务器通知开始抢地主消息\r\n    that.onCanRobState = function(callback){\r\n        if(callback){\r\n            $socket.on(\"canrob_notify\",callback)\r\n         }\r\n    }\r\n\r\n    //监听服务器:通知谁抢地主操作消息\r\n    that.onRobState = function(callback){\r\n        if(callback){\r\n            $socket.on(\"canrob_state_notify\",callback)\r\n         }\r\n    }\r\n\r\n    //监听服务器:确定地主消息\r\n    that.onChangeMaster = function(callback){\r\n        if(callback){\r\n            $socket.on(\"change_master_notify\",callback)\r\n         }\r\n    }\r\n\r\n    //监听服务器:显示底牌消息\r\n    that.onShowBottomCard = function(callback){\r\n        if(callback){\r\n            $socket.on(\"change_showcard_notify\",callback)\r\n         }\r\n    }\r\n\r\n    //监听服务器:可以出牌消息\r\n    that.onCanChuCard = function(callback){\r\n        if(callback){\r\n            $socket.on(\"can_chu_card_notify\",callback)\r\n        }\r\n    }\r\n\r\n    that.onRoomChangeState = function(callback){\r\n        if(callback){\r\n            $socket.on(\"room_state_notify\",callback)\r\n        }\r\n    }\r\n\r\n    that.onOtherPlayerChuCard = function(callback){\r\n        if(callback){\r\n            $socket.on(\"other_chucard_notify\",callback)\r\n        }\r\n    }\r\n    return that\r\n}\r\n\r\nexport default socketCtr "]}